@model Model.EF.Payment

@{
    ViewBag.Title = "PHIẾU CHI | CHI TIẾT";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@{
    var session = (MaiAmTruyenTin.Common.UserLogin)Session[MaiAmTruyenTin.Common.CommonConstants.USER_SESSION];
}
<div id="page_content_inner">
    <h2 class="heading_b uk-margin-bottom">QUẢN LÝ PHIẾU CHI</h2>
    <div class="md-card uk-margin-large-bottom">
        <div class="md-card-content">
            <h3 style="border: 1px solid rgb(33, 150, 243); padding: 15px 15px; background-color: rgb(33, 150, 243);
                    color: white; font-size: 15px;">
                CHI TIẾT PHIẾU CHI
            </h3>
            <div class="md-card-content">
                @using (Html.BeginForm("Edit", "Payment", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <label>Trạng thái sử dụng<span class="req">*</span></label>
                            <input readonly type="text" name="Code" id="Code" style="text-transform:uppercase" required class="md-input" value="@Model.Code" />
                        </div>
                    </div>

                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <label>Qũy tài khoản<span class="req">*</span></label>
                            @Html.DropDownListFor(model => model.ReceivePayAccountID, ViewBag.AccountName as SelectList, new { @class = "md-input", @disabled = "true" })
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <label>Đối tượng chi cho (người nhận tiền)<span class="req">*</span></label>
                            @Html.DropDownListFor(model => model.ReceivePayObjectID, ViewBag.ObjectName as SelectList, new { @class = "md-input", @disabled = "true" })
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <div class="md-input-wrapper md-input-filled">
                                <label>Ngày chi<span class="req">*</span></label>
                                <input readonly type="text" name="Date" id="Date" required class="md-input" value="@Model.Date.Value.ToString("dd/MM/yyyy")" />
                            </div>
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <label>Khoản chi<span class="req">*</span></label>
                            @Html.DropDownListFor(model => model.ReceivePayID, ViewBag.ReceivePayName as SelectList, new { @class = "md-input", @disabled = "true" })
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <label>Số tiền<span class="req">*</span></label>
                            <input readonly type="text" name="Amount" id="Amount" required class="md-input" value="@Model.Amount" />
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <label>Địa chỉ<span class="req">*</span></label>
                            <input readonly type="text" name="Address" id="Address" required class="md-input" value="@Model.Address" />
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-2 parsley-row">
                            <label>Ngày chỉnh sửa<span class="req">*</span></label>
                            <input type="text" id="ModifiedDate" readonly name="ModifiedDate" value="@DateTime.Now.ToString("dd/MM/yyyy")" class="md-input" />
                        </div>
                        <div class="uk-width-medium-1-2 parsley-row">
                            <label>Chỉnh sửa bởi<span class="req">*</span></label>
                            <input type="text" name="ModifiedBy" id="ModifiedBy" readonly required class="md-input" value="@session.Name" />
                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-medium-1-1 parsley-row">
                            <p>
                                <label>Trạng thái sử dụng<span class="req">*</span></label>
                                <input readonly type="button" id="Status" name="Status" class="md-btn md-btn-primary" @(Model.Status ? Html.Raw("class = 'md-btn md-btn-primary'") : Html.Raw("class = 'md-btn md-btn-danger'") ) value="@(Model.Status ? "Kích hoạt" : "Khóa")" data-md-icheck>
                            </p>
                        </div>
                    </div>
                    <br />
                    <div class="uk-input-group">
                        @{ var linkIndex = "/he-thong/phieu-chi/danh-sach";
                            var linkEdit = "/he-thong/phieu-chi/chinh-sua/" + Model.ID; }

                        <a href="@linkEdit" class="md-btn md-btn-success">CHỈNH SỬA</a>
                        <a href="@linkIndex" class="md-btn md-btn-danger">HỦY BỎ</a>
                        <a href="@linkIndex" class="md-btn md-btn-warning">QUAY LẠI DANH SÁCH</a>
                    </div>
                }
            </div>

        </div>
    </div>
</div>
<script>
    (function () {
        var wf = document.createElement('script');
        wf.src = ('https:' == document.location.protocol ? 'https' : 'http') +
            '://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
        wf.type = 'text/javascript';
        wf.async = 'true';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(wf, s);
    })();
</script>